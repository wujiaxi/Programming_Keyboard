#include 
<iostream>
using
namespace
std
int
main
cout<< 
<<endl;
vector<int>
vector<string>
unordered_set<string>
unordered_set<int>

alignas 
alignof 
and
and_eq
asm
atomic_cancel
atomic_commit
atomic_noexcept
auto
bitand
bitor
bool
break
case
catch
char
char16_t 
char32_t 
class
compl
concept
const
constexpr
const_cast
continue
decltype
default
delete
do
double

dynamic_cast
else
enum
explicit
export
extern
false
float
for
friend
goto
if
inline
int
import
long
module
mutable
namespace
new
noexcept
not
not_eq
nullptr
operator
or
or_eq
private
protected
public
register

reinterpret_cast
requires
return
short
signed
sizeof
static
static_assert 
static_cast
struct
switch
synchronized
template
this
thread_local
throw
true
try
typedef
typeid
typename
union
unsigned
using
virtual
void
volatile
wchar_t
while
xor
xor_eq


array
deque
forward_list
list
map
queue
set
stack
unordered_map
unordered_set
vector

assign
back
begin
cbegin
cend
clear
crbegin
crend
emplace
emplace_back
emplace_front
empty
end
erase
front
get_allocator
insert
max_size
merge
operator=
pop_back
pop_front
push_back
push_front
rbegin
remove
remove_if
rend
resize
reverse
size
sort
splice
swap
unique
